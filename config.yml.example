# Пример конфигурации Home Assistant проекта
# Скопируйте этот файл в config.yml и используйте scripts/configure.sh

# Режим работы (устанавливается через scripts/configure.sh)
mode: "mixed"  # local | global | mixed

# Home Assistant Server
server:
  url: "https://your-ha-server.com"
  hostname: "your-ha-server.com"
  local_ip: "192.168.1.XXX"  # Узнайте в HA: Settings → System → Network

# SSH Settings
ssh:
  use_local: true  # true = локальная сеть, false = интернет
  port_external: 2222
  port_internal: 22
  user: "root"
  key_path: ".ssh/id_hassio"

# SAMBA Settings
samba:
  use_local: true  # true = локальная сеть, false = интернет
  username: "homeassistant"
  password: "your_samba_password"  # Из Samba add-on configuration
  share: "config"
  mount_point: "/mnt/hassio"

# MCP Settings
mcp:
  use_local: false  # true = локальная сеть, false = интернет
  token: "your_mcp_token_here"  # Из .cursor/mcp.json
  endpoint_global: "https://your-ha-server.com/mcp_server/sse"
  endpoint_local: "http://192.168.1.XXX:8123/mcp_server/sse"

# n8n Integration (AI Agents)
n8n:
  enabled: false  # true = используете n8n
  url: "http://192.168.1.XXX:5678"  # URL вашего n8n
  # Webhooks для вызова workflow из HA (опционально)
  webhooks:
    butler_status: "http://192.168.1.XXX:5678/webhook/butler-status"
  # LLM Provider для AI агентов
  llm:
    provider: "gigachat"  # gigachat | ollama (добавится позже)

    # Gigachat настройки
    gigachat:
      enabled: true
      client_id: "YOUR_GIGACHAT_CLIENT_ID"  # Client ID от Gigachat
      authorization_key: "YOUR_GIGACHAT_AUTHORIZATION_KEY"  # Authorization Key (base64)
      scope: "GIGACHAT_API_PERS"  # GIGACHAT_API_PERS для физ. лиц
      base_url: "https://gigachat.devices.sberbank.ru/api/v1"  # URL API Gigachat
      model: "GigaChat"  # Модель: GigaChat, GigaChat-Plus, GigaChat-Pro
      verify_ssl: true

    # Ollama настройки (для будущего использования)
    ollama:
      enabled: false
      url: "http://192.168.1.XXX:11434"  # URL Ollama API
      model: "llama2"  # Модель для использования
      whisper:
        enabled: false  # true = включить локальную транскрипцию голоса
        model: "base"  # tiny | base | small (размер модели Whisper)

# Backup Settings
backup:
  retention_days: 7
  path: "backups"

# Paths
paths:
  project_root: "/home/YOUR_USERNAME/HASSio"
  config_link: "config"
