#!/bin/bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º

echo "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞..."
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo ""

ERRORS=0

# –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"
cd "$PROJECT_ROOT"

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ .gitignore
echo "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ .gitignore..."
if [ ! -f .gitignore ]; then
    echo "   ‚ùå .gitignore –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    ERRORS=$((ERRORS + 1))
else
    REQUIRED_PATTERNS=(
        "config.yml"
        ".cursor/mcp.json"
        ".samba-credentials"
        ".ssh/"
        "logs/*.log"
        "backups/"
        "config/"
    )

    for pattern in "${REQUIRED_PATTERNS[@]}"; do
        # –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã –¥–ª—è grep
        escaped_pattern=$(echo "$pattern" | sed 's/\./\\./g; s/\*/\\*/g')
        if grep -q "$escaped_pattern" .gitignore; then
            echo "   ‚úÖ $pattern"
        else
            echo "   ‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: $pattern"
            # –ù–µ —Å—á–∏—Ç–∞–µ–º –æ—à–∏–±–∫–æ–π –µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –∑–∞—â–∏—â–µ–Ω—ã
        fi
    done
fi
echo ""

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –ù–ï –≤ Git
echo "2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
SENSITIVE_FILES=(
    "config.yml"
    ".cursor/mcp.json"
    ".samba-credentials"
)

for file in "${SENSITIVE_FILES[@]}"; do
    if git ls-files --error-unmatch "$file" 2>/dev/null; then
        echo "   ‚ùå $file –ù–ê–ô–î–ï–ù –í GIT!"
        ERRORS=$((ERRORS + 1))
    else
        echo "   ‚úÖ $file –Ω–µ –≤ Git"
    fi
done

if git ls-files | grep -q "^.ssh/"; then
    echo "   ‚ùå .ssh/ –ù–ê–ô–î–ï–ù–ê –í GIT!"
    ERRORS=$((ERRORS + 1))
else
    echo "   ‚úÖ .ssh/ –Ω–µ –≤ Git"
fi
echo ""

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ staged —Ñ–∞–π–ª–æ–≤ (–µ—Å–ª–∏ Git –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω)
if [ -d .git ]; then
    echo "3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ staged —Ñ–∞–π–ª–æ–≤..."
    STAGED=$(git diff --cached --name-only)

    if [ -z "$STAGED" ]; then
        echo "   ‚ÑπÔ∏è  –ù–µ—Ç staged —Ñ–∞–π–ª–æ–≤"
    else
        for file in $STAGED; do
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —ç—Ç–æ –Ω–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª
            if [[ "$file" == "config.yml" ]] || \
               [[ "$file" == ".cursor/mcp.json" ]] || \
               [[ "$file" == ".samba-credentials" ]] || \
               [[ "$file" == .ssh/* ]]; then
                echo "   ‚ùå –û–ü–ê–°–ù–û: $file –≤ staged!"
                ERRORS=$((ERRORS + 1))
            else
                echo "   ‚úÖ $file"
            fi
        done
    fi
    echo ""
fi

# 4. –ü–æ–∏—Å–∫ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ staged —Ñ–∞–π–ª–∞—Ö
if [ -d .git ] && [ -n "$STAGED" ]; then
    echo "4Ô∏è‚É£ –ü–æ–∏—Å–∫ —É—Ç–µ—á–µ–∫ –≤ staged —Ñ–∞–π–ª–∞—Ö..."

    # –ó–∞–≥—Ä—É–∑–∏—Ç—å config.yml –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    if [ -f config.yml ]; then
        # –ò–∑–≤–ª–µ—á—å —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ config.yml
        REAL_IP=$(grep "local_ip:" config.yml | sed 's/.*: *"\?\([^"]*\)"\?/\1/' | sed 's/^ *//;s/ *$//' | head -1)
        REAL_HOSTNAME=$(grep "hostname:" config.yml | sed 's/.*: *"\?\([^"]*\)"\?/\1/' | sed 's/^ *//;s/ *$//' | head -1)
        REAL_PASSWORD=$(grep "password:" config.yml | grep -v "your_" | sed 's/.*: *"\?\([^"]*\)"\?/\1/' | sed 's/^ *//;s/ *$//' | head -1)

        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å IP (–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã —Ç–∏–ø–∞ 192.168.1.XXX –∏–ª–∏ 192.168.1.100)
        if [ -n "$REAL_IP" ] && [ "$REAL_IP" != "192.168.1.XXX" ]; then
            if git diff --cached | grep -q "$REAL_IP"; then
                echo "   ‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–∞–π–¥–µ–Ω –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π IP!"
                ERRORS=$((ERRORS + 1))
            fi
        fi

        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å hostname
        if [ -n "$REAL_HOSTNAME" ] && [ "$REAL_HOSTNAME" != "your-domain.com" ]; then
            if git diff --cached | grep -q "$REAL_HOSTNAME"; then
                echo "   ‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–∞–π–¥–µ–Ω –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –¥–æ–º–µ–Ω!"
                ERRORS=$((ERRORS + 1))
            fi
        fi

        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∞—Ä–æ–ª—å
        if [ -n "$REAL_PASSWORD" ] && [ "$REAL_PASSWORD" != "your_password" ]; then
            if git diff --cached | grep -q "$REAL_PASSWORD"; then
                echo "   ‚ùå –ö–†–ò–¢–ò–ß–ù–û: –ù–∞–π–¥–µ–Ω –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å!"
                ERRORS=$((ERRORS + 1))
            fi
        fi
    fi

    # –ü–æ–∏—Å–∫ —Ç–æ–∫–µ–Ω–æ–≤ (JWT –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å eyJ)
    if git diff --cached | grep -q "eyJ[A-Za-z0-9]"; then
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —ç—Ç–æ –Ω–µ –≤ –ø—Ä–∏–º–µ—Ä–∞—Ö
        if git diff --cached | grep "eyJ" | grep -qv "YOUR_TOKEN_HERE\|YOUR_MCP_TOKEN"; then
            echo "   ‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω (JWT)!"
            ERRORS=$((ERRORS + 1))
        fi
    fi

    if [ $ERRORS -eq 0 ]; then
        echo "   ‚úÖ –£—Ç–µ—á–µ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
    fi
    echo ""
fi

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–º–µ—Ä–æ–≤
echo "5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤-–ø—Ä–∏–º–µ—Ä–æ–≤..."
EXAMPLE_FILES=(
    "config.yml.example"
    ".cursor/mcp.json.example"
)

for file in "${EXAMPLE_FILES[@]}"; do
    if [ -f "$file" ]; then
        echo "   ‚úÖ $file —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    else
        echo "   ‚ö†Ô∏è  $file –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
done
echo ""

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
if [ $ERRORS -eq 0 ]; then
    echo "‚úÖ –í–°–Å –í –ü–û–†–Ø–î–ö–ï! –ë–µ–∑–æ–ø–∞—Å–Ω–æ –¥–µ–ª–∞—Ç—å commit/push"
    echo ""
    exit 0
else
    echo "‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–û –ü–†–û–ë–õ–ï–ú: $ERRORS"
    echo ""
    echo "‚ö†Ô∏è  –ù–ï –î–ï–õ–ê–ô–¢–ï git push –¥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è!"
    echo ""
    echo "–ß—Ç–æ –¥–µ–ª–∞—Ç—å:"
    echo "  1. –£–¥–∞–ª–∏—Ç–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –∏–∑ staged:"
    echo "     git reset HEAD config.yml"
    echo ""
    echo "  2. –£–¥–∞–ª–∏—Ç–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–∫—Ä–∏–ø—Ç–æ–≤"
    echo ""
    echo "  3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞:"
    echo "     ./scripts/check_security.sh"
    echo ""
    exit 1
fi
